# File:     03-refine_genotypes.snake
# Name:     Neal Platt
# Date:     04 April 2018
# Desc:     This Snake file is used to filter genotypes from sH exome reads
#           after reaching BQSR convergence.

# Reccomended
# Usage:    snakemake \
#               --printshellcmds \
#               --use-conda \
#               --cluster 'qsub -V -cwd -S /bin/bash -pe mpi {threads} -o {log}.log -e {log}.stderr' \
#               --jobs 100 \
#               --latency-wait 200 \
#               --snake \
#               --keep-going
#               --restart-times 2

# Reqs:     All required software should be installed/available through the inc.
#            singularity image or the packaged conda env.

# Comments: This portion of the workflow exectures after BQSR convergence and
#           whole genome alignment/coordinate liftover.  Results in filtered 
#           genotypes for all, autosomal, sex chr, and mito variants. 

#-------------------------------------------------------------------------------
# To Do:
#   3] update comments
#   4] add cleanup on success
#   5] choose better names
#   6] check log/rule name consistency
#-------------------------------------------------------------------------------

#setting up snakemake 
configfile: "config.yaml"
HOME_DIR = "/master/nplatt/schisto_hybridization/"
CONTIG_CHUNKS=50
ASSEMBLY = "schHae_v1.fa"

#setting work directory
RESULTS_DIR = HOME_DIR + "results/"
DATA_DIR = HOME_DIR + "data/"
LOG_DIR = RESULTS_DIR + "logs/"
GENOME_DIR = DATA_DIR + "genome/"
GENOME = GENOME_DIR + ASSEMBLY
SEQ_DIR = DATA_DIR + "sequence_data/"
FILTER_READS_DIR = RESULTS_DIR + "01-filtered_reads/"
MAP_DIR = RESULTS_DIR + "02-mapped_reads/" 

GATK_DIR = RESULTS_DIR + "03-gatk/" 
BQSR_R1_DIR = GATK_DIR + "r1/"
R1_HC = BQSR_R1_DIR + "hc/"
R1_DB = BQSR_R1_DIR + "db/"
R1_GENO = BQSR_R1_DIR + "geno/"
R1_MERGE = BQSR_R1_DIR + "merge/"
R1_FILTER = BQSR_R1_DIR + "filter/"
R1_BAM = BQSR_R1_DIR + "bams/"
R1_TABLE = BQSR_R1_DIR + "tables/"

BQSR_R2_DIR = GATK_DIR + "r2/"
R2_HC = BQSR_R2_DIR + "hc/"
R2_DB = BQSR_R2_DIR + "db/"
R2_GENO = BQSR_R2_DIR + "geno/"
R2_MERGE = BQSR_R2_DIR + "merge/"
R2_FILTER = BQSR_R2_DIR + "filter/"
R2_BAM = BQSR_R2_DIR + "bams/"
R2_TABLE = BQSR_R2_DIR + "tables/"

GENO_DIR = GATK_DIR + "filter_geno/"
 
WGA_DIR = RESULTS_DIR + "06-wga/" 

#setting work directory
workdir: HOME_DIR

#setting up local rules to be run on the head node
localrules: all


shell.prefix("source ~/.bash_profile; ")

#onsuccess:
#    shell("rm -r " + R2_HC)

#-------------------------------------------------------------------------------
# initializing rule - these files need to be generated...initiates the pipeline
rule all:
    input:
       # expand(GENO_DIR + "sH_filtered_{type}-variants.vcf.idx", type=["all", "auto", "mito", "sex"])
        expand(GENO_DIR + "sH_filtered_{type}-variants.vcf.idx", type=["all", "mito", "auto"])

#-------------------------------------------------------------------------------
rule annotate_variants:
    input:
        VCF = R2_FILTER + "cohort_raw.vcf",
    output:
        ANNOTATED_VCF = GENO_DIR + "cohort_annotated_variants.vcf"
    threads:
        1
    log:
        LOG_DIR + "annotate_variants"
    conda:
        "environment.yaml"
    shell:
        """
         bcftools annotate \
            --set-id +'%CHROM\:%POS' \
            {input.VCF} >{output.ANNOTATED_VCF}
        """

rule select_snps:
    input:
        VCF = GENO_DIR + "cohort_annotated_variants.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "cohort_SNP.vcf.idx",
        VCF = GENO_DIR + "cohort_SNP.vcf"
    threads:
        1
    log:
        LOG_DIR + "select_snps"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk SelectVariants \
                -V {input.VCF} \
                -select-type SNP \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

rule select_indels:
    input:
        VCF = GENO_DIR + "cohort_annotated_variants.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "cohort_INDEL.vcf.idx",
        VCF = GENO_DIR + "cohort_INDEL.vcf"
    threads:
        1
    log:
        LOG_DIR + "select_indels"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk SelectVariants \
                -V {input.VCF} \
                -select-type INDEL \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

################################################################################
rule all_soft_filter_snps:
    input:
        VCF = GENO_DIR + "cohort_SNP.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "cohort_soft-filtered_SNPs.vcf.idx",
        VCF = GENO_DIR + "cohort_soft-filtered_SNPs.vcf"
    threads:
        1
    log:
        LOG_DIR + "soft_filter_snps"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk VariantFiltration \
                -R {input.REFERENCE} \
                -V {input.VCF} \
                --filter-name "snp_QD_lt_5" \
                --filter-expression "QD < 5.0" \
                --filter-name "snp_FS_gt_55" \
                --filter-expression "FS > 55.0" \
                --filter-name "snp_MQ_lt_30" \
                --filter-expression "MQ < 30.0 || MQ = \"nan\"" \
                --filter-name "snp_MQRankSum_lt_-12.5" \
                --filter-expression "MQRankSum < -12.5" \
                --filter-name "snp_ReadPosRankSum_lt_-8" \
                --filter-expression "ReadPosRankSum < -8.0" \
                --filter-name "snp_SQR_gt_3" \
                --filter-expression "SOR > 3.0"  \
                -O {output.VCF}
        """

# indels
rule all_soft_filter_indels:
    input:
        REFERENCE = GENOME,
        VCF = GENO_DIR + "cohort_INDEL.vcf",
    output:
        GENO_DIR + "cohort_soft-filtered_INDELs.vcf.idx",
        VCF = GENO_DIR + "cohort_soft-filtered_INDELs.vcf"
    threads:
        1
    log:
        LOG_DIR + "soft_filter_indels"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk VariantFiltration \
                -R {input.REFERENCE} \
                -V {input.VCF} \
                --filter-name "indel_QD_lt_5" \
                --filter-expression "QD < 5.0" \
                --filter-name "snp_FS_gt_55" \
                --filter-expression "FS > 55.0" \
                --filter-name "snp_ReadPosRankSum_lt_-20" \
                --filter-expression "ReadPosRankSum < -20.0" \
                --filter-name "snp_SQR_gt_10" \
                --filter-expression "SOR > 10.0" \
                -O {output.VCF}
        """

#and merge them back together.
rule all_merge_soft_filtered_variants:
    input:
        SNPS = GENO_DIR + "cohort_soft-filtered_SNPs.vcf",
        INDELS = GENO_DIR + "cohort_soft-filtered_INDELs.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "all_soft-filtered_variants.vcf.idx",
        VCF = GENO_DIR + "all_soft-filtered_variants.vcf",
        LIST = GENO_DIR + "variant.list"
    threads:
        1
    log:
        LOG_DIR + "merge_soft_filtered_variants"
    params:
        LIST = R2_FILTER + "variant.list"
    shell:
        """
        ls {input.SNPS} {input.INDELS} >{output.LIST}
        
        singularity exec snpCalling_v0.0.8.img \
            gatk MergeVcfs \
                -I {output.LIST} \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

rule all_filtering:
    input:
        VCF = GENO_DIR + "all_soft-filtered_variants.vcf"
    output:
        FILT_1 = GENO_DIR + "all-filt-1.recode.vcf",
        MISSING_TABLE = GENO_DIR + "all-table.imiss",
        REMOVE_LIST = GENO_DIR + "all-data_poor_indivs.list",
        FILT_2 = GENO_DIR + "all-filt-2.recode.vcf",
        FILT_3 = GENO_DIR + "all-filt-3.recode.vcf",
        FINAL_VCF = protected(GENO_DIR + "sH_filtered_all-variants.vcf")
    threads:
        1
    log:
        LOG_DIR + "first_pass_filtering"
    conda:
        "environment.yaml"
    params:
        PREF_1 = GENO_DIR + "all-filt-1",
        PREF_2 = GENO_DIR + "all-filt-2",
        PREF_3 = GENO_DIR + "all-filt-3"
    shell:
        """
        vcftools \
            --remove-filtered-all \
            --min-alleles 2 \
            --max-alleles 2 \
            --max-missing 0.51 \
            --mac 3 \
            --vcf {input.VCF} \
            --out {params.PREF_1} \
            --recode \
            --recode-INFO-all

        vcftools \
            --vcf {output.FILT_1} \
            --missing-indv \
            --out {output.MISSING_TABLE}

        #remove individuals missing more than 25% of the data    
        cat {output.MISSING_TABLE}.imiss | awk '$5 >0.25 {{print $1}}' >{output.REMOVE_LIST}

        vcftools \
            --vcf {output.FILT_1} \
            --remove {output.REMOVE_LIST} \
            --recode \
            --recode-INFO-all \
            --out {params.PREF_2}

        vcftools \
            --vcf {output.FILT_2} \
            --max-missing 0.95 \
            --maf 0.05 \
            --recode \
            --recode-INFO-all \
            --out {params.PREF_3} \
            --min-meanDP 10

        bcftools filter \
            --SnpGap 50 \
            --IndelGap 100 \
            --output {output.FINAL_VCF} \
            -O v \
            {output.FILT_3}
        """

################################################################################
rule select_mito_snps:
    input:
        VCF = GENO_DIR + "cohort_SNP.vcf",
        REFERENCE = GENOME
    output:
        MITO_SNPS = GENO_DIR + "mito_snp.vcf",
        MITO_SOFT_SNPS = GENO_DIR + "mito_soft_snp.vcf",
        MITO_SNPS_IDX = GENO_DIR + "mito_snp.vcf.idx",
        MITO_SOFT_SNPS_IDX = GENO_DIR + "mito_soft_snp.vcf.idx"
    threads:
        1
    log:
        LOG_DIR + "select_mito_snps"
    params:
        MITO_CONTIG = "AMPZ01026399.1"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
                gatk SelectVariants \
                    -V {input.VCF}  \
                    -L {params.MITO_CONTIG} \
                    -O {output.MITO_SNPS}

            singularity exec snpCalling_v0.0.8.img \
                gatk VariantFiltration \
                    -R {input.REFERENCE} \
                    -V {output.MITO_SNPS} \
                    --filter-name "snp_QD_lt_5" \
                    --filter-expression "QD < 5.0" \
                    --filter-name "snp_FS_gt_55" \
                    --filter-expression "FS > 55.0" \
                    --filter-name "snp_MQ_lt_30" \
                    --filter-expression "MQ < 30.0 || MQ = \"nan\"" \
                    --filter-name "snp_MQRankSum_lt_-12.5" \
                    --filter-expression "MQRankSum < -12.5" \
                    --filter-name "snp_ReadPosRankSum_lt_-8" \
                    --filter-expression "ReadPosRankSum < -8.0" \
                    --filter-name "snp_SQR_gt_3" \
                    --filter-expression "SOR > 3.0"  \
                    -O {output.MITO_SOFT_SNPS}
        """
rule select_mito_indels:
    input:
        VCF = GENO_DIR + "cohort_INDEL.vcf",
        REFERENCE = GENOME
    output:
        MITO_INDELS = GENO_DIR + "mito_indel.vcf",
        MITO_SOFT_INDELS = GENO_DIR + "mito_soft_indel.vcf",
        MITO_INDELS_IDX = GENO_DIR + "mito_indel.vcf.idx",
        MITO_SOFT_INDELS_IDX = GENO_DIR + "mito_soft_indel.vcf.idx",
    threads:
        1
    log:
        LOG_DIR + "select_mito_indels"
    params:
        MITO_CONTIG="AMPZ01026399.1"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk SelectVariants \
                -V {input.VCF}  \
                -L {params.MITO_CONTIG} \
                -O {output.MITO_INDELS}

        singularity exec snpCalling_v0.0.8.img \
            gatk VariantFiltration \
                -R {input.REFERENCE} \
                -V {output.MITO_INDELS} \
                --filter-name "indel_QD_lt_5" \
                --filter-expression "QD < 5.0" \
                --filter-name "snp_FS_gt_55" \
                --filter-expression "FS > 55.0" \
                --filter-name "snp_ReadPosRankSum_lt_-20" \
                --filter-expression "ReadPosRankSum < -20.0" \
                --filter-name "snp_SQR_gt_10" \
                --filter-expression "SOR > 10.0" \
                -O {output.MITO_SOFT_INDELS}
        """

rule mito_filtering:
    input:
        MITO_SOFT_SNPS = GENO_DIR + "mito_soft_snp.vcf",
        MITO_SOFT_INDELS = GENO_DIR + "mito_soft_indel.vcf",
        REFERENCE = GENOME
    output:
        MITO_SOFT_VARIANTS = GENO_DIR + "mito_soft_variants.vcf",
        MITO_SOFT_VARIANTS_IDX = GENO_DIR + "mito_soft_variants.vcf.idx",
        VARIANT_LIST = GENO_DIR + "mito_variants.list",
        MITO_HARD = GENO_DIR + "mito_hard_variants.recode.vcf",
        MITO_HET = GENO_DIR + "mito_het_variants.vcf",
        MISSING_LIST = GENO_DIR + "data_poor_indivs_mt.list",
        TABLE = GENO_DIR + "mito_indiv_counts.imiss",
        MISSING_VCF = GENO_DIR + "mito_missing_indiv_variants.recode.vcf",
        FINAL_VCF = protected(GENO_DIR + "sH_filtered_mito-variants.vcf")
    threads:
        1
    log:
        LOG_DIR + "soft_filter_snps"
    conda:
        "environment.yaml"
    params:
        MITO_HARD_PREFIX= GENO_DIR + "mito_hard_variants",
        MISS_PREFIX = GENO_DIR + "mito_missing_indiv_variants",
        TABLE = GENO_DIR + "mito_indiv_counts"
    shell:
        """
        ls {input.MITO_SOFT_SNPS} {input.MITO_SOFT_INDELS} >{output.VARIANT_LIST}
        
        singularity exec snpCalling_v0.0.8.img \
            gatk MergeVcfs \
                -I {output.VARIANT_LIST} \
                -O {output.MITO_SOFT_VARIANTS} \
                -R {input.REFERENCE}

        #inital_hard_filt
        vcftools \
            --remove-filtered-all \
            --max-missing 0.51 \
            --mac 2 \
            --vcf {output.MITO_SOFT_VARIANTS} \
            --out {params.MITO_HARD_PREFIX} \
            --recode \
            --recode-INFO-all

        #het_filt
        bcftools view \
            --genotype ^het \
            {output.MITO_HARD} \
            >{output.MITO_HET}

        #count-missing per inidv
        vcftools \
            --vcf {output.MITO_HET} \
            --missing-indv \
            --out {params.TABLE}

        #remove individuals missing more than 25% of the data    
        cat {params.TABLE}.imiss | awk '$5 >0.50 {{print $1}}' >{output.MISSING_LIST}

        #remove low perc indivs
        vcftools \
            --vcf {output.MITO_HET} \
            --remove {output.MISSING_LIST} \
            --recode \
            --recode-INFO-all \
            --out {params.MISS_PREFIX}
        """
################################################################################
rule lift_over_variants:
    input:
        HAL = WGA_DIR + "schMan7_vs_schMan1.hal",
        VCF = GENO_DIR + "cohort_annotated_variants.vcf"
    output:
        SHAE_BED = GENO_DIR + "sH_snps.bed",
        SMAN_BED = GENO_DIR + "sH_vs_sM7_liftover.bed"
    threads:
        1
    log:
        LOG_DIR + "lift_over_snps"
    conda:
        "environment.yaml"
    shell:
        """
         vcf2bed --do-not-sort --max-mem=2G <{input.VCF} | \
                awk '{{print $1"\t"$2"\t"$3"\t"$4}}' \
                >{output.SHAE_BED}

        singularity exec snpCalling_v0.0.8.img \
            /usr/software/progressiveCactus/submodules/hal/bin/halLiftover  \
                {input.HAL} \
                schHae_v1 \
                {output.SHAE_BED} \
                schMan_v7 \
                {output.SMAN_BED}
        """


################################################################################
rule create_list_of_autosomal_variants:
    input:
        SMAN_BED = GENO_DIR + "sH_vs_sM7_liftover.bed",
        REFERENCE = GENOME,
        VCF = GENO_DIR + "cohort_annotated_variants.vcf",
    output:
        AUTO_VARIANTS_LIST = GENO_DIR + "autosomes.list",
    threads:
        1
    log:
        LOG_DIR + "select_autosome_variants"
    shell:
        """
        grep -v \
            -e _ZW \
            -e _MITO \
            -e _U \
            -e _W \
            {input.SMAN_BED} \
            | awk '{{print $4}}' \
                >{output.AUTO_VARIANTS_LIST}
        """

rule select_autosome_snps:
    input:
        AUTO_VARIANTS_LIST = GENO_DIR + "autosomes.list",
        REFERENCE = GENOME,
        VCF = GENO_DIR + "cohort_SNP.vcf",
    output:
        VCF = GENO_DIR + "cohort_autoChr_snps.vcf"
    threads:
        1
    log:
        LOG_DIR + "select_autosome_variants"
    conda:
        "environment.yaml"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk SelectVariants \
                -V {input.VCF} \
                -L {input.AUTO_VARIANTS_LIST} \
                -select-type SNP \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

rule select_autosome_indels:
    input:
        AUTO_VARIANTS_LIST = GENO_DIR + "autosomes.list",
        REFERENCE = GENOME,
        VCF = GENO_DIR + "cohort_INDEL.vcf"
    output:
        VCF = GENO_DIR + "cohort_autoChr_indels.vcf"
    threads:
        1
    log:
        LOG_DIR + "select_autosome_variants"
    conda:
        "environment.yaml"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk SelectVariants \
                -V {input.VCF} \
                -L {input.AUTO_VARIANTS_LIST} \
                -select-type INDEL \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

rule soft_filter_autosomal_snps:
    input:
        AUTO_SNPS_VCF = GENO_DIR + "cohort_autoChr_snps.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "cohort_soft-filtered_autoSNPs.vcf"
    threads:
        1
    log:
        LOG_DIR + "auto_soft_filter_snps"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk VariantFiltration \
                -R {input.REFERENCE} \
                -V {input.AUTO_SNPS_VCF} \
                --filter-name "snp_QD_lt_5" \
                --filter-expression "QD < 5.0" \
                --filter-name "snp_FS_gt_55" \
                --filter-expression "FS > 55.0" \
                --filter-name "snp_MQ_lt_30" \
                --filter-expression "MQ < 30.0 || MQ = \"nan\"" \
                --filter-name "snp_MQRankSum_lt_-12.5" \
                --filter-expression "MQRankSum < -12.5" \
                --filter-name "snp_ReadPosRankSum_lt_-8" \
                --filter-expression "ReadPosRankSum < -8.0" \
                --filter-name "snp_SQR_gt_3" \
                --filter-expression "SOR > 3.0"  \
                -O {output}
        """

# indels
rule soft_filter_autosomal_indels:
    input:
        AUTO_SNPS_VCF = GENO_DIR + "cohort_autoChr_indels.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "cohort_soft-filtered_autoINDELs.vcf"
    threads:
        1
    log:
        LOG_DIR + "auto_soft_filter_indels"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk VariantFiltration \
                -R {input.REFERENCE} \
                -V {input.AUTO_SNPS_VCF} \
                --filter-name "indel_QD_lt_5" \
                --filter-expression "QD < 5.0" \
                --filter-name "snp_FS_gt_55" \
                --filter-expression "FS > 55.0" \
                --filter-name "snp_ReadPosRankSum_lt_-20" \
                --filter-expression "ReadPosRankSum < -20.0" \
                --filter-name "snp_SQR_gt_10" \
                --filter-expression "SOR > 10.0" \
                -O {output}
        """

#and merge them back together.
rule merge_autosomal_variants:
    input:
        SNPS = GENO_DIR + "cohort_autoChr_snps.vcf",
        INDELS = GENO_DIR + "cohort_autoChr_indels.vcf",
        REFERENCE = GENOME
    output:
        LIST = GENO_DIR + "autosomal_variant.list",
        VCF = GENO_DIR + "auto_soft-filtered_variants.vcf"
    threads:
        1
    log:
        LOG_DIR + "auto_merge_soft_filtered_variants"
    params:

    shell:
        """
        ls {input.SNPS} {input.INDELS} >{output.LIST}
        
        singularity exec snpCalling_v0.0.8.img \
            gatk MergeVcfs \
                -I {output.LIST} \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

rule hard_filter_autosomal_variants:
    input:
        VCF = GENO_DIR + "auto_soft-filtered_variants.vcf"
    output:
        FILT_1 = GENO_DIR + "auto-filt-1.recode.vcf",
        MISSING_TABLE = GENO_DIR + "auto-table.imiss",
        REMOVE_LIST = GENO_DIR + "auto-data_poor_indivs.list",
        FILT_2 = GENO_DIR + "auto-filt-2.recode.vcf",
        FILT_3 = GENO_DIR + "auto-filt-3.recode.vcf",
        FINAL_VCF = protected(GENO_DIR + "sH_filtered_auto-variants.vcf")
    threads:
        1
    log:
        LOG_DIR + "autosomal_filtering"
    conda:
        "environment.yaml"
    params:
        PREF_1 = GENO_DIR + "all-filt-1",
        PREF_2 = GENO_DIR + "all-filt-2",
        PREF_3 = GENO_DIR + "all-filt-3"
    shell:
        """
        vcftools \
            --remove-filtered-all \
            --min-alleles 2 \
            --max-alleles 2 \
            --max-missing 0.51 \
            --mac 3 \
            --vcf {input.VCF} \
            --out {params.PREF_1} \
            --recode \
            --recode-INFO-all

        vcftools \
            --vcf {output.FILT_1} \
            --missing-indv \
            --out {output.MISSING_TABLE}

        #remove individuals missing more than 25% of the data    
        cat {output.MISSING_TABLE}.imiss | awk '$5 >0.25 {{print $1}}' >{output.REMOVE_LIST}

        vcftools \
            --vcf {output.FILT_1} \
            --remove {output.REMOVE_LIST} \
            --recode \
            --recode-INFO-all \
            --out {params.PREF_2}

        vcftools \
            --vcf {output.FILT_2} \
            --max-missing 0.95 \
            --maf 0.05 \
            --recode \
            --recode-INFO-all \
            --out {params.PREF_3} \
            --min-meanDP 10

        bcftools filter \
            --SnpGap 50 \
            --IndelGap 100 \
            --output {output.FINAL_VCF} \
            -O v \
            {output.FILT_3}
        """


################################################################################

rule select_sex_chr_variants:
    input:
        SMAN_BED = GENO_DIR + "sH_vs_sM7_liftover.bed",
        REFERENCE = GENOME,
        VCF = GENO_DIR + "cohort_annotated_variants.vcf"
    output:
        SEX_SNPS_LIST = GENO_DIR + "sex_chromosomes.list",
        SEX_SNPS_VCF = GENO_DIR + "cohort_sexChr.vcf"
    threads:
        1
    log:
        LOG_DIR + "select_sex_chr_variants"
    conda:
        "environment.yaml"
    shell:
        """
        grep -e _ZW -e _W {input.SMAN_BED} | awk '{{print $4}}' >{output.SEX_SNPS_LIST}
        """

rule select_sex_snps:
    input:
        SEX_VARIANTS_LIST = GENO_DIR + "sex_chromosomes.list",
        REFERENCE = GENOME,
        VCF = GENO_DIR + "cohort_SNP.vcf",
    output:
        VCF = GENO_DIR + "cohort_sexChr_snps.vcf"
    threads:
        1
    log:
        LOG_DIR + "select_sex_variants"
    conda:
        "environment.yaml"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk SelectVariants \
                -V {input.VCF} \
                -L {output.SEX_VARIANTS_LIST} \
                -select-type SNP \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

rule select_sex_indels:
    input:
        AUTO_VARIANTS_LIST = GENO_DIR + "sex_chromosomes.list",
        REFERENCE = GENOME,
        VCF = GENO_DIR + "cohort_INDEL.vcf",
    output:
        VCF = GENO_DIR + "cohort_sexChr_indels.vcf"
    threads:
        1
    log:
        LOG_DIR + "select_sex_indels"
    conda:
        "environment.yaml"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk SelectVariants \
                -V {input.VCF} \
                -L {output.AUTO_VARIANTS_LIST} \
                -select-type INDEL \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """


rule sex_soft_filter_snps:
    input:
        VCF = GENO_DIR + "cohort_sexChr_snps.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "cohort_soft-filtered_sexSNPs.vcf"
    threads:
        1
    log:
        LOG_DIR + "sex_soft_filter_snps"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk VariantFiltration \
                -R {input.REFERENCE} \
                -V {input.VCF} \
                --filter-name "snp_QD_lt_5" \
                --filter-expression "QD < 5.0" \
                --filter-name "snp_FS_gt_55" \
                --filter-expression "FS > 55.0" \
                --filter-name "snp_MQ_lt_30" \
                --filter-expression "MQ < 30.0 || MQ = \"nan\"" \
                --filter-name "snp_MQRankSum_lt_-12.5" \
                --filter-expression "MQRankSum < -12.5" \
                --filter-name "snp_ReadPosRankSum_lt_-8" \
                --filter-expression "ReadPosRankSum < -8.0" \
                --filter-name "snp_SQR_gt_3" \
                --filter-expression "SOR > 3.0"  \
                -O {output}
        """

# indels
rule sex_soft_filter_indels:
    input:
        VCF = GENO_DIR + "cohort_sexChr_indels.vcf",
        REFERENCE = GENOME
    output:
        GENO_DIR + "cohort_soft-filtered_sexINDELs.vcf"
    threads:
        1
    log:
        LOG_DIR + "sex_soft_filter_indels"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk VariantFiltration \
                -R {input.REFERENCE} \
                -V {input.VCF} \
                --filter-name "indel_QD_lt_5" \
                --filter-expression "QD < 5.0" \
                --filter-name "snp_FS_gt_55" \
                --filter-expression "FS > 55.0" \
                --filter-name "snp_ReadPosRankSum_lt_-20" \
                --filter-expression "ReadPosRankSum < -20.0" \
                --filter-name "snp_SQR_gt_10" \
                --filter-expression "SOR > 10.0" \
                -O {output}
        """

#and merge them back together.
rule sex_merge_soft_filtered_variants:
    input:
        SNPS = rules.sex_soft_filter_snps.output,
        INDELS = rules.sex_soft_filter_indels.output,
        REFERENCE = GENOME
    output:
        LIST = GENO_DIR + "sex_variant.list",
        VCF = GENO_DIR + "sex_soft-filtered_variants.vcf"
    threads:
        1
    log:
        LOG_DIR + "sex_merge_soft_filtered_variants"
    params:

    shell:
        """
        ls {input.SNPS} {input.INDELS} >{output.LIST}
        
        singularity exec snpCalling_v0.0.8.img \
            gatk MergeVcfs \
                -I {output.LIST} \
                -O {output.VCF} \
                -R {input.REFERENCE}
        """

rule sex_filtering:
    input:
        VCF = GENO_DIR + "sex_soft-filtered_variants.vcf"
    output:
        FILT_1 = GENO_DIR + "sex-filt-1.recode.vcf",
        MISSING_TABLE = GENO_DIR + "sex-table.imiss",
        REMOVE_LIST = GENO_DIR + "sex-data_poor_indivs.list",
        FILT_2 = GENO_DIR + "sex-filt-2.recode.vcf",
        FILT_3 = GENO_DIR + "sex-filt-3.recode.vcf",
        FINAL_VCF = protected(GENO_DIR + "sH_filtered_sex-variants.vcf")
    threads:
        1
    log:
        LOG_DIR + "sex_filtering"
    conda:
        "environment.yaml"
    params:
        PREF_1 = GENO_DIR + "all-filt-1",
        PREF_2 = GENO_DIR + "all-filt-2",
        PREF_3 = GENO_DIR + "all-filt-3"
    shell:
        """
        vcftools \
            --remove-filtered-all \
            --min-alleles 2 \
            --max-alleles 2 \
            --max-missing 0.51 \
            --mac 3 \
            --vcf {input.VCF} \
            --out {params.PREF_1} \
            --recode \
            --recode-INFO-all

        vcftools \
            --vcf {output.FILT_1} \
            --missing-indv \
            --out {output.MISSING_TABLE}

        #remove individuals missing more than 25% of the data    
        cat {output.MISSING_TABLE}.imiss | awk '$5 >0.25 {{print $1}}' >{output.REMOVE_LIST}

        vcftools \
            --vcf {output.FILT_1} \
            --remove {output.REMOVE_LIST} \
            --recode \
            --recode-INFO-all \
            --out {params.PREF_2}

        vcftools \
            --vcf {output.FILT_2} \
            --max-missing 0.95 \
            --maf 0.05 \
            --recode \
            --recode-INFO-all \
            --out {params.PREF_3} \
            --min-meanDP 10

        bcftools filter \
            --SnpGap 50 \
            --IndelGap 100 \
            --output {output.FINAL_VCF} \
            -O v \
            {output.FILT_3}

        cp {output.FILT_3} {output.FINAL_VCF}
        """

################################################################################

#index for downstream analyses
rule index_filtered_vcf:
    input:
        GENO_DIR + "sH_filtered_{type}-variants.vcf"
    output:
        GENO_DIR + "sH_filtered_{type}-variants.vcf.idx"
    threads:
        1
    log:
        LOG_DIR + "index_filtered_vcf"
    shell:
        """
        singularity exec snpCalling_v0.0.8.img \
            gatk IndexFeatureFile \
                -F {input}
        """
